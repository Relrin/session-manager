syntax = "proto3";
package session;

service SessionManager {
  rpc SetSession(SetSessionRequest) returns (SetSessionResponse) {}
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {}
  rpc ResetSession(ResetSessionRequest) returns (ResetSessionResponse) {}
}

message SetSessionRequest {
  // The unique player ids, that should have the same connection data.
  // Defined as a list to allow batched set requests.
  repeated string player_ids = 1;
  // The server address
  string host = 2;
  // The listened port by the remote server
  uint32 port = 3;
  // Additional context about the given connection. For example, it could be
  // used for storing information such as: server name, login & password,
  // voice settings, etc.
  map<string, string> metadata = 4;
}

message SetSessionResponse {
}

message GetSessionRequest {
  // The unique player's id that we want query by.
  string player_id = 1;
}

message GetSessionResponse {
  // The server address
  string host = 1;
  // The listened port by the remote server
  uint32 port = 2;
  // Additional context about the given connection. For example, it could be
  // used for storing information such as: server name, login & password,
  // voice settings, etc.
  map<string, string> metadata = 3;
}

message ResetSessionRequest {
  // The unique player's id that we want query by.
  // Defined as a list to allow batched set requests.
  repeated string player_ids = 1;
}

message ResetSessionResponse {
}
